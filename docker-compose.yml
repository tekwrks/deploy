version: '3'
services:

  proxy:
    image: ${REPO:?err}/proxy:1.0.0
    ports:
      - "3000:80"
    volumes:
      - "./nginx.conf:/etc/nginx/nginx.conf:ro"
      - "./assets:/var/www/html/assets:ro"
    networks:
      - webnet
    deploy:
      restart_policy:
        condition: any

  website:
    hostname: website
    image: ${REPO:?err}/website:1.0.0
    networks:
      - webnet
    deploy:
      restart_policy:
        condition: any

  # renderer:
  #   image: ${REPO:?err}/renderer:1.0.0
  #   networks:
  #     - intranet
  #   deploy:
  #     replicas: 1
  #     restart_policy:
  #       condition: any

  # login:
  #   image: ${REPO:?err}/login:1.0.0
  #   env_file:
  #     - login.env
  #   networks:
  #     - dbnet
  #     - webnet
  #     - intranet
  #   deploy:
  #     replicas: 1
  #     restart_policy:
  #       condition: any

  # user:
  #   image: ${REPO:?err}/user:1.0.0
  #   env_file:
  #     - user.env
  #   networks:
  #     - dbnet
  #     - webnet
  #   deploy:
  #     replicas: 1
  #     restart_policy:
  #       condition: any

  # email:
  #   image: ${REPO:?err}/email:1.0.0
  #   env_file:
  #     - email.env
  #   networks:
  #     - intranet
  #   deploy:
  #     restart_policy:
  #       condition: any

  # database:
  #   image: ${REPO:?err}/database:1.0.0
  #   ports:
  #     - "27017:27017"
  #   env_file:
  #     - database.env
  #   volumes:
  #     - "~/notatweet/database/DATA/db:/data/db"
  #     - "~/notatweet/database/DATA/configdb:/data/configdb"
  #   networks:
  #     - dbnet
  #   deploy:
  #     restart_policy:
  #       condition: any
  #     placement:
  #       constraints: [node.role == manager]

networks:

  # intranet:
  #   driver: overlay

  webnet:
    driver: overlay

  # dbnet:
  #   driver: overlay
